const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const token = '7599710621:AAE3hVWIA7b51H3S0phfQDBlvw-8ucTTXyY';
const bot = new TelegramBot(token, { polling: true });

let userState = {}; // –°—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

// –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤—ñ–≤ —á–∏—Å–ª–æ
  if (!isNaN(text)) {
    const amount = parseFloat(text);
    userState[chatId] = { step: 'from_currency', amount };
    bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É, —è–∫—É –≤–∏ —Ö–æ—á–µ—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏:', {
      reply_markup: {
        keyboard: [['UAH', 'MDL'], ['USD', 'EUR']],
        one_time_keyboard: true,
      },
    });
    return;
  }

  const state = userState[chatId] || {};

  if (state.step === 'from_currency') {
    // –ö—Ä–æ–∫ 1: –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤—É –≤–∞–ª—é—Ç—É
    if (!['UAH', 'MDL', 'USD', 'EUR'].includes(text.toUpperCase())) {
      bot.sendMessage(chatId, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É –∑—ñ —Å–ø–∏—Å–∫—É.');
      return;
    }

    userState[chatId] = { ...state, fromCurrency: text.toUpperCase(), step: 'to_currency' };
    bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É, —É —è–∫—É –≤–∏ —Ö–æ—á–µ—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏:', {
      reply_markup: {
        keyboard: [['UAH', 'MDL'], ['USD', 'EUR']],
        one_time_keyboard: true,
      },
    });
    return;
  }

  if (state.step === 'to_currency') {
    // –ö—Ä–æ–∫ 2: –û—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
    if (!['UAH', 'MDL', 'USD', 'EUR'].includes(text.toUpperCase())) {
      bot.sendMessage(chatId, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É –∑—ñ —Å–ø–∏—Å–∫—É.');
      return;
    }

    const toCurrency = text.toUpperCase();
    const { amount, fromCurrency } = state;

    try {
      // –ó–∞–ø–∏—Ç –¥–æ API
      const apiUrl = `https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}&amount=${amount}&access_key=3bd47c8cb88cad1db0c2274a42e4c5da`;
      const response = await axios.get(apiUrl);

      if (response.data && response.data.success) {
        const convertedAmount = response.data.result.toFixed(2);
        bot.sendMessage(
          chatId,
          `üí± ${amount} ${fromCurrency} ‚âà ${convertedAmount} ${toCurrency}`,
          { parse_mode: 'Markdown' }
        );
      } else {
        bot.sendMessage(chatId, '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
      }
    } catch (error) {
      console.error('API Error:', error.message);
      bot.sendMessage(chatId, '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫—É—Ä—Å—É –≤–∞–ª—é—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
    }

    // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    userState[chatId] = null;
    return;
  }

  // –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∂–æ–¥–Ω–æ–º—É —Å—Ü–µ–Ω–∞—Ä—ñ—é
  bot.sendMessage(chatId, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó.');
});
